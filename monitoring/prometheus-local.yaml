# my global config
global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'codelab-monitor'

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
# - "first.rules"
# - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
#  - job_name: 'prometheus'
#    # metrics_path defaults to '/metrics'
#    # scheme defaults to 'http'.
#    # Override the global default and scrape targets from this job every 5 seconds.
#    scrape_interval: 5s
#    static_configs:
#      - targets: ['prom:9090']

#  - job_name: 'grafana'
#    scrape_interval: 5s
#    static_configs:
#      - targets: ['grafana:3000']

#  - job_name: "node"
#    scrape_interval: "15s"
#    static_configs:
#      - targets: ['exporter:9100']

  - job_name: 'gateway-service'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    #localhost || machine-ip || aws-public-dns:port
    static_configs:
      - targets: ['api-gateway:80']

  - job_name: 'eureka-discovery-service'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    #localhost || machine-ip || aws-public-dns:port
    static_configs:
      - targets: ['discovery-service:801']

  - job_name: 'auth-service'
    metrics_path: '/api/auth/actuator/prometheus'
    scrape_interval: 15s
    #localhost || machine-ip || aws-public-dns:port
    static_configs:
      - targets: ['auth-webapp:8083']

  - job_name: 'first-service'
    metrics_path: '/api/employee/actuator/prometheus'
    scrape_interval: 5s
    #localhost || machine-ip || aws-public-dns:port
    static_configs:
      - targets: ['first-webapp:8081']

  - job_name: 'second-service'
    metrics_path: '/api/consumer/actuator/prometheus'
    scrape_interval: 5s
    #localhost || machine-ip || aws-public-dns:port
    static_configs:
      - targets: ['second-webapp:8082']

  - job_name: 'user-profile'
    metrics_path: '/api/user/profile/actuator/prometheus'
    scrape_interval: 5s
    #localhost || machine-ip || aws-public-dns:port
    static_configs:
      - targets: ['user-profile-webapp:8084']

  - job_name: 'training-management'
    metrics_path: '/api/training/management/actuator/prometheus'
    scrape_interval: 5s
    #localhost || machine-ip || aws-public-dns:port
    static_configs:
      - targets: ['training-management-webapp:8086']

  - job_name: 'enrolment-deferment-exemption-management'
    metrics_path: '/api/enrolment/deferment/exemption/actuator/prometheus'
    scrape_interval: 5s
    #localhost || machine-ip || aws-public-dns:port
    static_configs:
      - targets: ['enrolment-deferment-exemption-webapp:8087']

  - job_name: 'medical-screening'
    metrics_path: '/api/medical/screening/actuator/prometheus'
    scrape_interval: 5s
    #localhost || machine-ip || aws-public-dns:port
    static_configs:
      - targets: ['medical-screening-webapp:8088']

  - job_name: 'notification'
    metrics_path: '/api/notification/actuator/prometheus'
    scrape_interval: 5s
    #localhost || machine-ip || aws-public-dns:port
    static_configs:
      - targets: ['notification-webapp:8085']

#End Of File